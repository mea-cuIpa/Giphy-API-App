{"version":3,"sources":["API/giphy.js","components/GifItem.js","components/GifList.js","icons/sprite.svg","components/SearchBar.js","components/App.js","index.js"],"names":["axios","create","baseURL","params","api_key","GifItem","gif","id","url","images","fixed_height","useState","showModal","setShow","onClick","className","alt","src","Modal","show","onHide","Header","closeButton","GifList","gifs","map","SearchBar","state","value","error","handleSubmit","e","preventDefault","match","props","onSubmit","handleChange","target","setState","this","Form","Control","placeholder","type","onChange","noValidate","Button","variant","xlinkHref","svg","Alert","React","Component","App","limit","offset","search","onSearchSubmit","a","giphy","get","q","catch","err","response","console","status","request","message","data","loadGifs","headers","Container","dataLength","length","next","hasMore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c6c8a64f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.giphy.com/v1/',\r\n  params: {\r\n    api_key: 'OcLKJ3izPTySFP1XJtcVnlOu33dVGPJ7',\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst GifItem = ({ gif }) => {\r\n  const {\r\n    id,\r\n    images: {\r\n      fixed_height: { url },\r\n    },\r\n  } = gif;\r\n\r\n  const [showModal, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleShow}>\r\n        <img className=\"gif-container__img\" alt={id} src={url} />\r\n      </div>\r\n      <Modal show={showModal} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <img className=\"modal-header__image\" alt={id} src={url} />\r\n        </Modal.Header>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifItem;\r\n","import React from 'react';\r\nimport GifItem from './GifItem';\r\n\r\nconst GifList = ({ gifs }) => {\r\n  const renderedGifs = gifs.map(gif => {\r\n    return (\r\n      <div className=\"gif-container__content\" key={gif.id}>\r\n        <GifItem gif={gif} className=\"gif-container__img\" />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return renderedGifs;\r\n};\r\n\r\nexport default GifList;\r\n","export default __webpack_public_path__ + \"static/media/sprite.f271f6de.svg\";","import React from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport svg from '../icons/sprite.svg';\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { value: '', error: '' };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { value } = this.state;\r\n\r\n    if (value.match(/^[a-z0-9]+$/i)) this.props.onSubmit(value);\r\n  };\r\n\r\n  handleChange = e => {\r\n    let error = this.state.error;\r\n\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n\r\n    if (value) {\r\n      error = !value.match(/^[a-z0-9]+$/i)\r\n        ? 'Only alphanumeric characters allowed.'\r\n        : '';\r\n    }\r\n\r\n    this.setState({ value, error });\r\n  };\r\n\r\n  render() {\r\n    const { error, value } = this.state;\r\n    return (\r\n      <div className=\"w-75\">\r\n        <Form onSubmit={this.handleSubmit} className=\"d-flex w-100 my-3\">\r\n          <Form.Control\r\n            className=\"rounded-0 header__input\"\r\n            placeholder=\"Search for a gifs...\"\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={this.handleChange}\r\n            noValidate\r\n          ></Form.Control>\r\n          <Button variant=\"dark\" className=\"rounded-0\" type=\"submit\">\r\n            <svg className=\"header__icon\">\r\n              <use xlinkHref={`${svg}#icon-magnifying-glass`} />\r\n            </svg>\r\n          </Button>\r\n        </Form>\r\n        {error && (\r\n          <Alert variant=\"danger\" className=\"h5\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport giphy from '../API/giphy';\r\nimport GifList from './GifList';\r\nimport SearchBar from './SearchBar';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport '../styles.css';\r\n\r\nclass App extends React.Component {\r\n  state = { gifs: [], limit: 20, offset: 0, search: '' };\r\n\r\n  componentDidMount() {\r\n    this.onSearchSubmit('nature');\r\n  }\r\n\r\n  onSearchSubmit = async search => {\r\n    const {\r\n      data: { data },\r\n    } = await giphy\r\n      .get('/gifs/search', {\r\n        params: {\r\n          q: search,\r\n          limit: 20,\r\n          offset: 0,\r\n        },\r\n      })\r\n      .catch(err => {\r\n        //err > 500 ? server side : user\r\n        err.response\r\n          ? console.error(`Server responded with status ${err.response.status}`)\r\n          : err.request\r\n          ? console.error(`Can't get response ${err.request}`)\r\n          : console.error(\r\n              `Something happened in setting up the request ${err.message}`\r\n            );\r\n      });\r\n\r\n    this.setState({ gifs: data, search });\r\n  };\r\n\r\n  loadGifs = async () => {\r\n    this.setState({ offset: this.state.offset + this.state.limit });\r\n    const { offset, limit, search, gifs } = this.state;\r\n\r\n    const {\r\n      data: { data },\r\n    } = await giphy\r\n      .get('/gifs/search', {\r\n        params: {\r\n          q: search,\r\n          limit,\r\n          offset,\r\n        },\r\n      })\r\n      .catch(err => {\r\n        err.response\r\n          ? console.error(\r\n              `Server responded ${err.response.data}, ${err.response.headers} with status ${err.response.status}`\r\n            )\r\n          : err.request\r\n          ? console.error(`Can't get response ${err.request}`)\r\n          : console.error(\r\n              `Something happened in setting up the request ${err.message}`\r\n            );\r\n      });\r\n\r\n    this.setState({ gifs: [...gifs, ...data] });\r\n  };\r\n\r\n  render() {\r\n    const { gifs } = this.state;\r\n\r\n    return (\r\n      <Container className=\"p-0\">\r\n        <header className=\"bg-white d-flex justify-content-center align-items-center header\">\r\n          <SearchBar onSubmit={this.onSearchSubmit} />\r\n        </header>\r\n        <main className=\"bg-light gif-container\">\r\n          <InfiniteScroll\r\n            dataLength={gifs.length}\r\n            next={this.loadGifs}\r\n            hasMore={true}\r\n          >\r\n            <GifList gifs={gifs} />\r\n          </InfiniteScroll>\r\n        </main>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}